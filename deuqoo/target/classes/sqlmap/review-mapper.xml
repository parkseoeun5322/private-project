<?xml version="1.0" encoding="UTF-8"?>

<!-- mapper 태그를 사용하기 위한 코드 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review.mapper">
	<!-- 댓글 수 -->
	<select id="comment_cnt" resultType="integer">
		select count(*) from board_comment 
		where comment_bno = #{review_no} 
		and comment_category = #{board_category} 
	</select>

	<!-- 글 삭제 처리 -->
	<delete id="delete">
		delete from review where review_no = #{review_no}
	</delete>

	<!-- 스크랩 취소 처리 -->
	<delete id="scrapDelete">
		delete from scrap where scrap_no = #{scrap_no}
	</delete>
	<update id="scrapCancel">
		update review set review_scrapcnt = review_scrapcnt - 1 where review_no = #{scrap_boardNo}
	</update>

	<!-- 스크랩 처리 -->
	<insert id="scrapInsert">
		insert into scrap(scrap_boardNo, scrap_id, scrap_category, scrap_title)
		values(#{scrap_boardNo}, #{scrap_id}, #{scrap_category}, #{scrap_title})
	</insert>
	<update id="scrap">
		update review set review_scrapcnt = review_scrapcnt + 1 where review_no = #{scrap_boardNo}
	</update>	

	<!-- 리뷰 글 수정 -->
	<update id="update">
		update review set review_header = #{review_header}, 
			review_division = #{review_division},
			review_title = #{review_title},
			review_content = #{review_content}
		where review_no = #{review_no}
	</update>

	<!-- 추천 취소 처리 -->
	<delete id="pushDelete">
		delete from push where push_no = #{push_no}
	</delete>
	<update id="pushCancel">
		update review set review_pushcnt = review_pushcnt - 1 where review_no = #{push_boardNo}
	</update>
	
	<!-- 추천 수 증가 처리 -->
	<insert id="pushInsert">
		insert into push(push_boardNo, push_id, push_category)
		values(#{push_boardNo}, #{push_id}, #{push_category})
	</insert>
	<update id="push">
		update review set review_pushcnt = review_pushcnt + 1 where review_no = #{push_boardNo}
	</update>
	
	<!-- 리뷰 글 상세 조회 -->
	<select id="scrapList" resultType="common.ScrapVO">
		select * from scrap 
		where scrap_boardNo = #{scrap_boardNo} 
		and scrap_id = #{scrap_id}
		and scrap_category = #{scrap_category}		
	</select>
	<select id="pushList" resultType="common.PushVO">
		select * from push 
		where push_boardNo = #{push_boardNo} 
		and push_id = #{push_id}
		and push_category = #{push_category}
	</select>
	<select id="detail" resultType="review.ReviewVO">
        select r.*, 
        	(select count(*) from board_comment 
        	where comment_bno = #{review_no}
        	and comment_category = '리뷰') review_commentcnt
        from review r where review_no = #{review_no}
	</select>

	<!-- 리뷰 글 조회수 증가 -->
	<update id="read">
		update review set review_readcnt = review_readcnt + 1 where review_no = #{review_no}
	</update>
	
	 <!-- 리뷰 글 저장 -->
	<insert id="insert">
		insert into review(review_title, review_content, review_header, review_writer, review_division) 
		values(#{review_title}, #{review_content}, #{review_header}, #{review_writer}, #{review_division})
	</insert>
		
	<!-- 글 분류 처리 -->
	 <select id="divList" resultType="review.ReviewVO">
	 	select n.* from
		 	(select n.*, rownum review_rownum from
			 	(select * from review
			 	where review_division = #{division}
			 	order by review_no) n
			 order by review_rownum desc) n
		where review_rownum between #{beginList} and #{endList}
	 </select>
	 <select id="divTotal" resultType="integer">
	 	select count(*) from review
	 	where review_division = #{division}
	 </select>

	 <!-- 말머리 검색 후 목록 조회 -->
	 <select id="headerList" resultType="review.ReviewVO">
	 	select n.* from
		 	(select n.*, rownum review_rownum from
			 	(select * from review
			 	where review_header = #{header}
			 	order by review_no) n
			 order by review_rownum desc) n
		where review_rownum between #{beginList} and #{endList}
	 </select>
	 <select id="headerTotal" resultType="integer">
	 	select count(*) from review
	 	where review_header = #{header}
	 </select>
	 
	<sql id="search_where">
		<if test="search == 'review_title' or search == 'review_content'">
			where ${search}
			like '%' || #{keyword} || '%'
		</if>
		<if test="search == 'all'">
			where review_title like '%' || #{keyword} || '%'
			or review_content like '%' || #{keyword} || '%'
		</if>
	</sql>
	 
	 <!-- 각 페이지에 출력할 목록 조회 -->
	 <select id="list" resultType="review.ReviewVO">
	 	select n.* from
		 	(select n.*, rownum review_rownum from
			 	(select * from review
			 	<include refid="search_where"/>
			 	order by review_no) n
			 order by review_rownum desc) n
		where review_rownum between #{beginList} and #{endList}
	 </select>
	 
	 <!-- 페이징 처리를 위한 검색 조건에 해당하는 글 목록 건수 조회 -->
	 <select id="total" resultType="integer">
	 	select count(*) from review
	 	<include refid="search_where" />
	 </select>
</mapper>